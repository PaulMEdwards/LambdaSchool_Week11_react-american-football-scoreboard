{"version":3,"sources":["BottomRow.js","Countdown.js","App.js","serviceWorker.js","index.js"],"names":["RowItem","props","react_default","a","createElement","className","title","toCamelCase","value","BottomRow","down","toGo","ballOn","quarter","TimeBox","minutes","seconds","Countdown","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startTimer","setState","timerOn","timerTime","state","timerStart","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","adjustTimer","input","_this$state","_this2","_this$state2","Math","floor","slice","Fragment","onClick","Component","Timer","TeamScore","side","name","score","NextDownButton","nextDown","BallOnButtons","ballOnAdjust","ballOnReset","NextQuarterButton","nextQuarter","TeamButtons","addScore","ResetButton","id","reset","String","prototype","toProperCase","charAt","toUpperCase","toLowerCase","separator","arguments","length","undefined","t","split","i","join","App","_useState","useState","_useState2","slicedToArray","setTimer","_useState3","_useState5","_useState7","_useState8","homeScore","setHomeScore","_useState9","_useState10","awayScore","setAwayScore","_useState11","_useState12","setDown","_useState13","_useState14","setToGo","_useState15","_useState16","setBallOn","_useState17","_useState18","setQuarter","targetTeam","scoreValue","src_BottomRow","b","y","abs","src_Countdown_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9173ffbb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction BottomRow(props) {\n  return (\n    <div className=\"bottomRow\">\n      <RowItem title={\"Down\"} value={props.down} />\n      <RowItem title={\"To Go\"} value={props.toGo} />\n      <RowItem title={\"Ball on\"} value={props.ballOn} />\n      <RowItem title={\"Quarter\"} value={props.quarter} />\n    </div>\n  );\n};\n\nfunction RowItem(props) {\n  return (\n    <div className={props.title.toCamelCase()}>\n      <h3 className={props.title.toCamelCase()+\"__title\"}>{props.title}</h3>\n      <div className={props.title.toCamelCase()+\"__value\"}>{props.value}</div>\n    </div>\n  );\n}\n\nexport default BottomRow;\n","import React, { Component } from \"react\";\nimport \"./Countdown.css\";\n\nclass Countdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timerOn: false,\n      timerStart: 900000,\n      timerTime: this.props.timer\n    };\n    // this.timer = this.state.timerStart;\n  }\n\n  // state = {\n  //   timerOn: false,\n  //   timerStart: 900000,\n  //   timerTime: timer\n  // };\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      const newTime = this.state.timerTime - 10;\n      if (newTime >= 0) {\n        this.setState({\n          timerTime: newTime\n        });\n      } else {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n        alert(\"Countdown ended\");\n      }\n    }, 10);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.timer);\n    this.setState({ timerOn: false });\n  };\n  resetTimer = () => {\n    if (this.state.timerOn === false) {\n      this.setState({\n        timerTime: this.state.timerStart\n      });\n    }\n  };\n\n  adjustTimer = input => {\n    const { timerTime, timerOn } = this.state;\n    if (!timerOn) {\n      if (input === \"incMinutes\" && timerTime + 60000 < 216000000) {\n        this.setState({ timerTime: timerTime + 60000 });\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n        this.setState({ timerTime: timerTime - 60000 });\n      } else if (input === \"incSeconds\" && timerTime + 1000 < 216000000) {\n        this.setState({ timerTime: timerTime + 1000 });\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n        this.setState({ timerTime: timerTime - 1000 });\n      }\n    }\n  };\n\n  render() {\n    const { timerTime, timerStart, timerOn } = this.state;\n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\n\n    return (\n      <React.Fragment>\n        <div className=\"ButtonBox-header\">Quarter</div>\n        <div className=\"ButtonBox-label\">Minutes : Seconds</div>\n        <div className=\"ButtonBox-display\">\n          <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n          <button onClick={() => this.adjustTimer(\"incSeconds\")}>&#8679;</button>\n\n          <div className=\"ButtonBox-time\">\n            <TimeBox minutes={minutes} seconds={seconds} />\n          </div>\n\n          <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n          <button onClick={() => this.adjustTimer(\"decSeconds\")}>&#8681;</button>\n        </div>\n\n        {timerOn === false && (timerStart === 0 || timerTime === timerStart) && (\n          <button className=\"Button-start\" onClick={this.startTimer}>\n            Start\n          </button>\n        )}\n        {timerOn === true && timerTime >= 1000 && (\n          <button className=\"Button-stop\" onClick={this.stopTimer}>\n            Stop\n          </button>\n        )}\n        {timerOn === false &&\n          (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\n            <button className=\"Button-start\" onClick={this.startTimer}>\n              Resume\n            </button>\n          )}\n\n        {(timerOn === false || timerTime < 1000) &&\n          (timerStart !== timerTime && timerStart > 0) && (\n            <button className=\"Button-reset\" onClick={this.resetTimer}>\n              Reset\n            </button>\n          )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport function TimeBox(props) {\n  return (\n    <span>\n      {props.minutes}:{props.seconds}\n    </span>\n  );\n}\n\nexport default Countdown;\n","/* eslint-disable no-extend-native */\n//DONE: STEP 1 - Import the useState hook.\n//DONE: STEP 2 - Establish your application's state with some useState hooks.  You'll need one for the home score and another for the away score.\n//DONE: STEP 3 - We need to change the hardcoded values in these div tags to accept dynamic values from our state.\n//DONE: STEP 4 - Now we need to attach our state setter functions to click listeners.\n\nimport React, {useState} from \"react\";\nimport \"./App.css\";\nimport BottomRow from \"./BottomRow\";\nimport Countdown from \"./Countdown\";\nimport {TimeBox} from \"./Countdown\";\n\nString.prototype.toProperCase = function() {\n  return this.charAt(0).toUpperCase() + this.slice(1).toLowerCase();\n};\nString.prototype.toCamelCase = function(separator = ' ') {\n  let t = this.split(separator);\n  for (let i = 0; i < t.length; i++) {\n    t[i] = i === 0 ? t[i].toLowerCase() : t[i].toProperCase();\n  }\n  return t.join('');\n};\n\nfunction App(props) {\n  const [timer, setTimer] = useState(900000); //\"15:00\");\n  const [minutes] = useState(0);\n  const [seconds] = useState(0);\n  const [homeScore, setHomeScore] = useState(0);\n  const [awayScore, setAwayScore] = useState(0);\n  const [down, setDown] = useState(1);\n  const [toGo, setToGo] = useState(10);\n  const [ballOn, setBallOn] = useState(0);\n  const [quarter, setQuarter] = useState(1);\n\n  //#region Internal Functions\n  const nextDown = () => {\n    setDown(down<4 ? down+1 : 1);\n  };\n\n  const nextQuarter = () => {\n    if (quarter<4) {\n      setQuarter(quarter+1);\n      setTimer(900000); //\"15:00\");\n    } else {\n      setTimer(0);      //\"00:00\");\n    }\n  };\n\n  const addScore = (targetTeam, scoreValue) => {\n    if (targetTeam === 'home') {\n      setHomeScore(homeScore + scoreValue);\n    } else {\n      setAwayScore(awayScore + scoreValue);\n    }\n  };\n\n  const ballOnReset = () => {\n    setBallOn(0);\n    setToGo(10);\n  };\n  const ballOnAdjust = (value) => {\n    let b = ballOn+value;\n    if (b<0) {\n      if (b<-49) {\n        b=-50;\n      }\n    } else {\n      if (b>49) {\n        b=50;\n      }\n    }\n    setBallOn(b);\n\n    //Calculate remaining yards to next down\n    let yards = () => {\n      if (Math.abs(b)===50) {\n        return 0;\n      } else {\n        return 10-(Math.abs(b) % 10);\n      }\n    };\n    let y = yards();\n    setToGo(y);\n\n    //Reset Down if yards to go is 10 or 0\n    if (y===10 || y===0) setDown(1);\n  };\n\n  const reset = () => {\n    setTimer(900000); //\"15:00\");\n    setHomeScore(0);\n    setAwayScore(0);\n    setDown(1);\n    setToGo(10);\n    setBallOn(0);\n    setQuarter(1);\n  };\n  //#endregion Internal Functions\n\n  return (\n    <React.Fragment>\n      <section className=\"scoreboard contain\">\n        <div className=\"topRow\">\n          <TeamScore side={\"home\"} name={\"Lions\"} score={homeScore} />\n          <Timer timer={timer} minutes={minutes} seconds={seconds} />\n          <TeamScore side={\"away\"} name={\"Tigers\"} score={awayScore} />\n        </div>\n        <BottomRow down={down} toGo={toGo} ballOn={ballOn} quarter={quarter} />\n      </section>\n\n      <div className=\"container contain\">\n        <section className=\"container column contain-others contain-70\">\n          <div className=\"ButtonBox contain-others-inner\">\n            <div className=\"ButtonBox-header\">Ball</div>\n            <section className=\"container between\">\n              <div className=\"contain-15 center-width\">\n                <span>Down:</span><br/>\n                <NextDownButton nextDown={nextDown} />\n              </div>\n              <div className=\"center-width\">\n                <span>Ball On:</span><br/>\n                <BallOnButtons ballOnReset={ballOnReset} ballOnAdjust={ballOnAdjust} />\n              </div>\n            </section>\n          </div>\n\n          <div className=\"ButtonBox contain-others-inner\">\n            <div className=\"ButtonBox-header\">Team Scoring</div>\n            <section className=\"container\">\n              <span>Home:</span>\n              <span>Away:</span>\n            </section>\n            <section className=\"container\">\n              <TeamButtons side={\"home\"} addScore={addScore} />\n              <TeamButtons side={\"away\"} addScore={addScore} />\n            </section>\n          </div>\n        </section>\n\n        <section className=\"container contain-quarter\">\n          <div className=\"Timers ButtonBox center-within column contain-100\">\n            <Countdown timer={timer}/>\n            <NextQuarterButton nextQuarter={nextQuarter} />\n          </div>\n        </section>\n      </div>\n\n      <section className=\"container\">\n        <ResetButton reset={reset} />\n      </section>\n    </React.Fragment>\n  );\n}\n\n//#region Components\nfunction Timer(props) {\n  return (\n    <React.Fragment>\n      {/* <div className=\"timer\">{props.timer}</div> */}\n      <div className=\"timer\"><TimeBox minutes={props.minutes} seconds={props.seconds} /></div>\n    </React.Fragment>\n  );\n}\n\nfunction TeamScore(props) {\n  return (\n    <div className={props.side}>\n      <h2 className={props.side+\"__name\"}>{props.name}</h2>\n      <div className={props.side+\"__score\"}>{props.score}</div>\n    </div>\n  );\n}\n\nfunction NextDownButton(props) {\n  return (\n    <button onClick={()=>props.nextDown()}>Next</button>\n  );\n}\nfunction BallOnButtons(props) {\n  return (\n    <div>\n      <button onClick={()=>props.ballOnAdjust(-10)}>-10</button>\n      <button onClick={()=>props.ballOnAdjust(-5)}>-5</button>\n      <button onClick={()=>props.ballOnAdjust(-1)}>-1</button>\n      <button onClick={()=>props.ballOnReset()}>0</button>\n      <button onClick={()=>props.ballOnAdjust(1)}>+1</button>\n      <button onClick={()=>props.ballOnAdjust(5)}>+5</button>\n      <button onClick={()=>props.ballOnAdjust(10)}>+10</button>\n    </div>\n  );\n}\nfunction NextQuarterButton(props) {\n  return (\n    <button onClick={()=>props.nextQuarter()}>Next</button>\n  );\n}\n\nfunction TeamButtons(props) {\n  return (\n    <div className={props.side+\"Buttons\"}>\n      <button className={props.side+\"Buttons__touchdown\"} onClick={()=>props.addScore(props.side, 7)}>Touchdown</button>\n      <button className={props.side+\"Buttons__fieldGoal\"} onClick={()=>props.addScore(props.side, 3)}>Field Goal</button>\n    </div>\n  );\n}\n\nfunction ResetButton(props) {\n  return (\n    <button id=\"reset\" onClick={()=>props.reset()}>Reset</button>\n  );\n}\n//#endregion\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}